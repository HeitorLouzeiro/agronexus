# Generated by Django 5.2.4 on 2025-07-09 23:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('piquete', 'Piquete'), ('baia', 'Baia'), ('curral', 'Curral'), ('apartacao', 'Apartação'), ('enfermaria', 'Enfermaria')], default='piquete', max_length=20)),
                ('tamanho_ha', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('tipo_forragem', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('em_uso', 'Em Uso'), ('descanso', 'Em Descanso'), ('degradada', 'Degradada'), ('reforma', 'Em Reforma'), ('disponivel', 'Disponível')], default='disponivel', max_length=20)),
                ('coordenadas_poligono', models.JSONField(blank=True, help_text='Coordenadas do polígono da área', null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Área',
                'verbose_name_plural': 'Áreas',
                'db_table': 'areas',
                'ordering': ['propriedade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='CategoriaFinanceira',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('receita', 'Receita'), ('despesa', 'Despesa')], max_length=10)),
                ('descricao', models.TextField(blank=True)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Categoria Financeira',
                'verbose_name_plural': 'Categorias Financeiras',
                'db_table': 'categorias_financeiras',
                'ordering': ['tipo', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ContaFinanceira',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('conta_corrente', 'Conta Corrente'), ('poupanca', 'Poupança'), ('caixa', 'Caixa'), ('investimento', 'Investimento')], max_length=20)),
                ('banco', models.CharField(blank=True, max_length=100)),
                ('agencia', models.CharField(blank=True, max_length=20)),
                ('conta', models.CharField(blank=True, max_length=20)),
                ('saldo_inicial', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('ativa', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Conta Financeira',
                'verbose_name_plural': 'Contas Financeiras',
                'db_table': 'contas_financeiras',
                'ordering': ['propriedade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=200)),
                ('fabricante', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('antibiotico', 'Antibiótico'), ('antiparasitario', 'Antiparasitário'), ('anti_inflamatorio', 'Anti-inflamatório'), ('vitamina', 'Vitamina/Suplemento'), ('hormonio', 'Hormônio'), ('outro', 'Outro')], max_length=20)),
                ('principio_ativo', models.CharField(max_length=200)),
                ('concentracao', models.CharField(max_length=100)),
                ('via_aplicacao', models.CharField(max_length=50)),
                ('dosagem_padrao', models.CharField(help_text='Ex: 1ml/50kg', max_length=100)),
                ('periodo_carencia_dias', models.IntegerField(default=0)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Medicamento',
                'verbose_name_plural': 'Medicamentos',
                'db_table': 'medicamentos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Vacina',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=200)),
                ('fabricante', models.CharField(max_length=100)),
                ('doencas_previne', models.TextField(help_text='Doenças que a vacina previne')),
                ('dose_ml', models.DecimalField(decimal_places=2, max_digits=5)),
                ('via_aplicacao', models.CharField(help_text='Subcutânea, intramuscular, etc.', max_length=50)),
                ('intervalo_doses_dias', models.IntegerField(blank=True, null=True)),
                ('periodo_carencia_dias', models.IntegerField(default=0)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Vacina',
                'verbose_name_plural': 'Vacinas',
                'db_table': 'vacinas',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('perfil', models.CharField(choices=[('proprietario', 'Proprietário'), ('gerente', 'Gerente'), ('funcionario', 'Funcionário'), ('veterinario', 'Veterinário')], default='funcionario', max_length=20)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identificacao_unica', models.CharField(help_text='Brinco, chip, etc.', max_length=50)),
                ('nome_registro', models.CharField(blank=True, max_length=100)),
                ('sexo', models.CharField(choices=[('M', 'Macho'), ('F', 'Fêmea')], max_length=1)),
                ('data_nascimento', models.DateField()),
                ('raca', models.CharField(max_length=100)),
                ('categoria', models.CharField(choices=[('bezerro', 'Bezerro'), ('bezerra', 'Bezerra'), ('novilho', 'Novilho'), ('novilha', 'Novilha'), ('touro', 'Touro'), ('vaca', 'Vaca')], max_length=20)),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('vendido', 'Vendido'), ('morto', 'Morto'), ('descartado', 'Descartado')], default='ativo', max_length=20)),
                ('data_compra', models.DateField(blank=True, null=True)),
                ('valor_compra', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('origem', models.CharField(blank=True, max_length=200)),
                ('data_venda', models.DateField(blank=True, null=True)),
                ('valor_venda', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('destino', models.CharField(blank=True, max_length=200)),
                ('data_morte', models.DateField(blank=True, null=True)),
                ('causa_morte', models.TextField(blank=True)),
                ('fotos_evolucao', models.JSONField(blank=True, default=list, help_text='Lista de URLs das fotos com datas')),
                ('observacoes', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('mae', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='filhos_mae', to='agronexus.animal')),
                ('pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='filhos_pai', to='agronexus.animal')),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animais',
                'db_table': 'animais',
                'ordering': ['identificacao_unica'],
            },
        ),
        migrations.CreateModel(
            name='AnimalManejo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observacoes_especificas', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agronexus.animal')),
            ],
            options={
                'db_table': 'animal_manejo',
            },
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
                ('criterio_agrupamento', models.CharField(help_text='Ex: Bezerros desmamados em 2025', max_length=200)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('area_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lotes', to='agronexus.area')),
            ],
            options={
                'verbose_name': 'Lote',
                'verbose_name_plural': 'Lotes',
                'db_table': 'lotes',
                'ordering': ['propriedade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoOcupacaoArea',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_entrada', models.DateField()),
                ('data_saida', models.DateField(blank=True, null=True)),
                ('motivo_movimentacao', models.CharField(blank=True, max_length=200)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_ocupacao', to='agronexus.area')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_areas', to='agronexus.lote')),
            ],
            options={
                'verbose_name': 'Histórico Ocupação Área',
                'verbose_name_plural': 'Históricos Ocupação Área',
                'db_table': 'historico_ocupacao_area',
                'ordering': ['-data_entrada'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoLoteAnimal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_entrada', models.DateField()),
                ('data_saida', models.DateField(blank=True, null=True)),
                ('motivo_movimentacao', models.CharField(blank=True, max_length=200)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_lotes', to='agronexus.animal')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_animais', to='agronexus.lote')),
            ],
            options={
                'verbose_name': 'Histórico Lote-Animal',
                'verbose_name_plural': 'Históricos Lote-Animal',
                'db_table': 'historico_lote_animal',
                'ordering': ['-data_entrada'],
            },
        ),
        migrations.CreateModel(
            name='EstacaoMonta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('observacoes', models.TextField(blank=True)),
                ('ativa', models.BooleanField(default=True)),
                ('lotes_participantes', models.ManyToManyField(related_name='estacoes_monta', to='agronexus.lote')),
            ],
            options={
                'verbose_name': 'Estação de Monta',
                'verbose_name_plural': 'Estações de Monta',
                'db_table': 'estacoes_monta',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.AddField(
            model_name='animal',
            name='lote_atual',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animais', to='agronexus.lote'),
        ),
        migrations.CreateModel(
            name='Manejo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('pesagem', 'Pesagem'), ('vacinacao', 'Vacinação'), ('medicamento', 'Administração de Medicamento'), ('inseminacao', 'Inseminação'), ('diagnostico', 'Diagnóstico de Gestação'), ('parto', 'Parto'), ('desmame', 'Desmame'), ('marcacao', 'Marcação'), ('descorna', 'Descorna'), ('castração', 'Castração'), ('outro', 'Outro')], max_length=20)),
                ('data_manejo', models.DateField()),
                ('custo_material', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('custo_pessoal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('custo_total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('observacoes', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('animais', models.ManyToManyField(related_name='manejos', through='agronexus.AnimalManejo', to='agronexus.animal')),
                ('lote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manejos', to='agronexus.lote')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Manejo',
                'verbose_name_plural': 'Manejos',
                'db_table': 'manejos',
                'ordering': ['-data_manejo'],
            },
        ),
        migrations.CreateModel(
            name='Inseminacao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_inseminacao', models.DateField()),
                ('tipo', models.CharField(choices=[('natural', 'Monta Natural'), ('ia', 'Inseminação Artificial'), ('iatf', 'IATF')], max_length=10)),
                ('semen_utilizado', models.CharField(blank=True, help_text='Identificação do sêmen', max_length=200)),
                ('observacoes', models.TextField(blank=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inseminacoes', to='agronexus.animal')),
                ('estacao_monta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agronexus.estacaomonta')),
                ('reprodutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cobertura_realizadas', to='agronexus.animal')),
                ('manejo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inseminacao', to='agronexus.manejo')),
            ],
            options={
                'verbose_name': 'Inseminação',
                'verbose_name_plural': 'Inseminações',
                'db_table': 'inseminacoes',
                'ordering': ['-data_inseminacao'],
            },
        ),
        migrations.CreateModel(
            name='DiagnosticoGestacao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_diagnostico', models.DateField()),
                ('resultado', models.CharField(choices=[('positivo', 'Positivo'), ('negativo', 'Negativo'), ('inconclusivo', 'Inconclusivo')], max_length=15)),
                ('metodo', models.CharField(blank=True, help_text='Ultrassom, palpação, etc.', max_length=100)),
                ('observacoes', models.TextField(blank=True)),
                ('inseminacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosticos', to='agronexus.inseminacao')),
                ('manejo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostico_gestacao', to='agronexus.manejo')),
            ],
            options={
                'verbose_name': 'Diagnóstico de Gestação',
                'verbose_name_plural': 'Diagnósticos de Gestação',
                'db_table': 'diagnosticos_gestacao',
                'ordering': ['-data_diagnostico'],
            },
        ),
        migrations.AddField(
            model_name='animalmanejo',
            name='manejo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agronexus.manejo'),
        ),
        migrations.CreateModel(
            name='AdministracaoMedicamento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dosagem_aplicada', models.CharField(max_length=100)),
                ('via_administracao', models.CharField(max_length=50)),
                ('motivo_aplicacao', models.TextField()),
                ('data_fim_carencia', models.DateField()),
                ('observacoes', models.TextField(blank=True)),
                ('manejo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='administracao_medicamento', to='agronexus.manejo')),
                ('medicamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agronexus.medicamento')),
            ],
            options={
                'verbose_name': 'Administração de Medicamento',
                'verbose_name_plural': 'Administrações de Medicamento',
                'db_table': 'administracoes_medicamento',
                'ordering': ['-manejo__data_manejo'],
            },
        ),
        migrations.CreateModel(
            name='Parto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_parto', models.DateField()),
                ('resultado', models.CharField(choices=[('nascido_vivo', 'Nascido Vivo'), ('aborto', 'Aborto'), ('natimorto', 'Natimorto')], max_length=15)),
                ('dificuldade', models.CharField(choices=[('normal', 'Normal'), ('assistido', 'Assistido'), ('cesariana', 'Cesariana')], default='normal', max_length=15)),
                ('peso_nascimento', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('bezerro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parto_origem', to='agronexus.animal')),
                ('mae', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partos', to='agronexus.animal')),
                ('manejo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parto', to='agronexus.manejo')),
            ],
            options={
                'verbose_name': 'Parto',
                'verbose_name_plural': 'Partos',
                'db_table': 'partos',
                'ordering': ['-data_parto'],
            },
        ),
        migrations.CreateModel(
            name='Pesagem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('peso_kg', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('data_pesagem', models.DateField()),
                ('equipamento_usado', models.CharField(blank=True, max_length=100)),
                ('observacoes', models.TextField(blank=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pesagens', to='agronexus.animal')),
                ('manejo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pesagem', to='agronexus.manejo')),
            ],
            options={
                'verbose_name': 'Pesagem',
                'verbose_name_plural': 'Pesagens',
                'db_table': 'pesagens',
                'ordering': ['-data_pesagem'],
            },
        ),
        migrations.CreateModel(
            name='Propriedade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=200)),
                ('localizacao', models.TextField(help_text='Endereço completo da propriedade')),
                ('area_total_ha', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('coordenadas_gps', models.JSONField(blank=True, help_text='Coordenadas geográficas da propriedade', null=True)),
                ('inscricao_estadual', models.CharField(blank=True, max_length=50)),
                ('cnpj_cpf', models.CharField(blank=True, max_length=18)),
                ('ativa', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('proprietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propriedades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Propriedade',
                'verbose_name_plural': 'Propriedades',
                'db_table': 'propriedades',
                'ordering': ['nome'],
            },
        ),
        migrations.AddField(
            model_name='manejo',
            name='propriedade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manejos', to='agronexus.propriedade'),
        ),
        migrations.AddField(
            model_name='lote',
            name='propriedade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='agronexus.propriedade'),
        ),
        migrations.CreateModel(
            name='LancamentoFinanceiro',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_lancamento', models.DateField()),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('transferencia', 'Transferência')], max_length=15)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('descricao', models.CharField(max_length=200)),
                ('observacoes', models.TextField(blank=True)),
                ('comprovante', models.FileField(blank=True, null=True, upload_to='comprovantes/')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('animal_relacionado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos_financeiros', to='agronexus.animal')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agronexus.categoriafinanceira')),
                ('conta_destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos_entrada', to='agronexus.contafinanceira')),
                ('conta_origem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lancamentos_saida', to='agronexus.contafinanceira')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('manejo_relacionado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos_financeiros', to='agronexus.manejo')),
                ('propriedade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lancamentos_financeiros', to='agronexus.propriedade')),
            ],
            options={
                'verbose_name': 'Lançamento Financeiro',
                'verbose_name_plural': 'Lançamentos Financeiros',
                'db_table': 'lancamentos_financeiros',
                'ordering': ['-data_lancamento'],
            },
        ),
        migrations.AddField(
            model_name='estacaomonta',
            name='propriedade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estacoes_monta', to='agronexus.propriedade'),
        ),
        migrations.AddField(
            model_name='contafinanceira',
            name='propriedade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contas_financeiras', to='agronexus.propriedade'),
        ),
        migrations.CreateModel(
            name='ConfiguracaoSistema',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('peso_ua_referencia', models.DecimalField(decimal_places=2, default=450, help_text='Peso de referência para 1 UA em kg', max_digits=6)),
                ('dias_gmd_padrao', models.IntegerField(default=30, help_text='Período padrão para cálculo de GMD')),
                ('dias_diagnostico_gestacao', models.IntegerField(default=35, help_text='Dias após IA para diagnóstico')),
                ('dias_gestacao', models.IntegerField(default=285, help_text='Período de gestação em dias')),
                ('notificar_calendario_sanitario', models.BooleanField(default=True)),
                ('dias_antecedencia_notificacao', models.IntegerField(default=7)),
                ('moeda', models.CharField(default='BRL', max_length=10)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('propriedade', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuracao', to='agronexus.propriedade')),
            ],
            options={
                'verbose_name': 'Configuração do Sistema',
                'verbose_name_plural': 'Configurações do Sistema',
                'db_table': 'configuracoes_sistema',
            },
        ),
        migrations.AddField(
            model_name='categoriafinanceira',
            name='propriedade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorias_financeiras', to='agronexus.propriedade'),
        ),
        migrations.AddField(
            model_name='area',
            name='propriedade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='agronexus.propriedade'),
        ),
        migrations.AddField(
            model_name='animal',
            name='propriedade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animais', to='agronexus.propriedade'),
        ),
        migrations.CreateModel(
            name='ProtocoloIATF',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('duracao_dias', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('passos_protocolo', models.JSONField(help_text='Lista de passos com dias e procedimentos')),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('propriedade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protocolos_iatf', to='agronexus.propriedade')),
            ],
            options={
                'verbose_name': 'Protocolo IATF',
                'verbose_name_plural': 'Protocolos IATF',
                'db_table': 'protocolos_iatf',
                'ordering': ['nome'],
            },
        ),
        migrations.AddField(
            model_name='inseminacao',
            name='protocolo_iatf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agronexus.protocoloiatf'),
        ),
        migrations.CreateModel(
            name='RelatorioPersonalizado',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('rebanho', 'Rebanho'), ('financeiro', 'Financeiro'), ('reproducao', 'Reprodução'), ('sanidade', 'Sanidade'), ('pastagem', 'Pastagem')], max_length=20)),
                ('filtros', models.JSONField(help_text='Filtros aplicados ao relatório')),
                ('colunas', models.JSONField(help_text='Colunas selecionadas para exibição')),
                ('publico', models.BooleanField(default=False, help_text='Visível para outros usuários da propriedade')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('propriedade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relatorios', to='agronexus.propriedade')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relatorios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relatório Personalizado',
                'verbose_name_plural': 'Relatórios Personalizados',
                'db_table': 'relatorios_personalizados',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CalendarioSanitario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_agendada', models.DateField()),
                ('tipo_manejo', models.CharField(choices=[('pesagem', 'Pesagem'), ('vacinacao', 'Vacinação'), ('medicamento', 'Administração de Medicamento'), ('inseminacao', 'Inseminação'), ('diagnostico', 'Diagnóstico de Gestação'), ('parto', 'Parto'), ('desmame', 'Desmame'), ('marcacao', 'Marcação'), ('descorna', 'Descorna'), ('castração', 'Castração'), ('outro', 'Outro')], max_length=20)),
                ('descricao', models.TextField()),
                ('status', models.CharField(choices=[('agendado', 'Agendado'), ('realizado', 'Realizado'), ('cancelado', 'Cancelado')], default='agendado', max_length=15)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('animais_alvo', models.ManyToManyField(blank=True, to='agronexus.animal')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('lotes_alvo', models.ManyToManyField(blank=True, to='agronexus.lote')),
                ('manejo_realizado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agronexus.manejo')),
                ('medicamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agronexus.medicamento')),
                ('propriedade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendario_sanitario', to='agronexus.propriedade')),
                ('vacina', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agronexus.vacina')),
            ],
            options={
                'verbose_name': 'Calendário Sanitário',
                'verbose_name_plural': 'Calendários Sanitários',
                'db_table': 'calendario_sanitario',
                'ordering': ['data_agendada'],
            },
        ),
        migrations.CreateModel(
            name='Vacinacao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dose_aplicada', models.DecimalField(decimal_places=2, max_digits=5)),
                ('lote_vacina', models.CharField(blank=True, max_length=50)),
                ('data_vencimento', models.DateField(blank=True, null=True)),
                ('data_proxima_dose', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('manejo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vacinacao', to='agronexus.manejo')),
                ('vacina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agronexus.vacina')),
            ],
            options={
                'verbose_name': 'Vacinação',
                'verbose_name_plural': 'Vacinações',
                'db_table': 'vacinacoes',
                'ordering': ['-manejo__data_manejo'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='animalmanejo',
            unique_together={('animal', 'manejo')},
        ),
        migrations.AlterUniqueTogether(
            name='lote',
            unique_together={('propriedade', 'nome')},
        ),
        migrations.AlterUniqueTogether(
            name='categoriafinanceira',
            unique_together={('propriedade', 'nome')},
        ),
        migrations.AlterUniqueTogether(
            name='area',
            unique_together={('propriedade', 'nome')},
        ),
        migrations.AlterUniqueTogether(
            name='animal',
            unique_together={('propriedade', 'identificacao_unica')},
        ),
    ]
